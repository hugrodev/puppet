@import './color.scss';

* {
	box-sizing: border-box;
}

html,
body {
	overflow-x: hidden;
	margin: 0;
	width: 100vw;
}

img.background-image {
	position: fixed;
	z-index: -1;
	width: 100vw;
	height: auto;
}

.flex {
	display: flex;
}

.blob-btn {
	$numOfBlobs: 4;
	z-index: 1;
	position: relative;
	padding: 20px 46px;
	margin-bottom: 30px;
	text-align: center;
	text-transform: uppercase;
	font-size: 16px;
	font-weight: bold;
	background-color: transparent;
	outline: none;
	border: none;
	transition: color 0.5s;
	--webkit-transition: color 0.5s;
	cursor: pointer;
	border-radius: 30px;

	&:before {
		content: "";
		z-index: 1;
		position: absolute;
		left: 0;
		top: 0;
		width: 100%;
		height: 100%;
		border: $borderW solid;
		border-radius: 30px;
	}

	&:after {
		content: "";
		z-index: -2;
		position: absolute;
		left: $borderW*1.5;
		top: $borderW*1.5;
		width: 100%;
		height: 100%;

		transition: all 0.3s 0.2s;
		--webkit-transition: all 0.3s 0.2s;
		border-radius: 30px;
	}

	&:hover {
		color: $dark;
		border-radius: 30px;
		border-width: 0;

		&:after {
			transition: all 0.3s;
			--webkit-transition: all 0.3s;
			left: 0;
			top: 0;
			border-radius: 30px;
		}
	}

	&__inner {
		z-index: -1;
		overflow: hidden;
		position: absolute;
		left: 0;
		top: 0;
		width: 100%;
		height: 100%;
		border-radius: 30px;
		border: solid 2px;
		background: #ffffff;
	}

	// additional container created, because in FF blobs are breaking overflow:hidden of element with svg gooey filter
	&__blobs {
		position: relative;
		display: block;
		height: 100%;
		filter: url('#goo');
		--webkit-filter: url('#goo');
	}

	&__blob {
		position: absolute;
		top: $borderW;
		width: 100% / $numOfBlobs;
		height: 100%;
		border-radius: 100%;
		transform: translate3d(0, 150%, 0) scale(1.7);
		--webkit-transform:  translate3d(0, 150%, 0) scale(1.7);
		transition: transform 0.45s;
		--webkit-transition: transform 0.45s;

		@supports(filter: url('#goo')) {
			transform: translate3d(0, 150%, 0) scale(1.4);
			-webkit-transform: translate3d(0, 150%, 0) scale(1.4);

		}

		@for $i from 1 through $numOfBlobs {
			&:nth-child(#{$i}) {
				left: ($i - 1) * (120% / $numOfBlobs);
				transition-delay: ($i - 1) * 0.08s;
				--webkit-transition-delay: ($i - 1) * 0.08s;
			}
		}

		.blob-btn:hover & {
			transform: translateZ(0) scale(1.7);
			--webkit-transform: translateZ(0) scale(1.7);

			@supports(filter: url('#goo')) {
				transform: translateZ(0) scale(1.4);
				--webkit-transform: translateZ(0) scale(1.4);
			}
		}
	}

}

.invisible {
	opacity: 0;
}

.visible {
	opacity: 1;
}

::-webkit-scrollbar {
	background-color: transparent;
	width: 8px;
	border-radius: 24px;
}

::-webkit-scrollbar-thumb {
	border-bottom: none;
}

::-webkit-scrollbar-track {
	border-radius: 24px;
}

::-webkit-scrollbar-thumb {
	border-radius: 24px;
}

//   ANIMATIONS
.fadeIn {
	animation-name: fadeIn;
	animation-duration: 1s;
	--webkit-animation-duration: 1s;
	animation-timing-function: ease-in-out;
	--webkit-animation-timing-function: ease-in-out;
}

@keyframes fadeIn {
	0% {
		opacity: 0;
	}

	100% {
		opacity: 1;
	}
}

.slideInRight {
	animation: slideInRight 0.5s ease-out forwards;
	--webkit-animation: slideInRight 0.5s ease-out forwards;
	opacity: 0;
	transform: translateX(100%);
	--webkit-transform: translateX(100%);

	@keyframes slideInRight {
		0% {
			opacity: 0;
			transform: translateX(100%);
			--webkit-transform: translateX(100%);
		}

		100% {
			opacity: 1;
			transform: translateX(0);
			--webkit-transform: translateX(0);
		}
	}
}

.slideInUp {
	animation: slideInUp 0.5s ease-out forwards;
	--webkit-animation: slideInUp 0.5s ease-out forwards;
	opacity: 0;
	transform: translateY(100%);
	--webkit-transform: translateY(100%);

	@keyframes slideInUp {
		0% {
			opacity: 0;
			transform: translateY(100%);
			-webkit-transform: translateY(100%);
		}

		100% {
			opacity: 1;
			transform: translateY(0);
			--webkit-transform: translateY(0);
		}
	}
}

.popup {
	animation: popping 0.5s cubic-bezier(0.36, 0.07, 0.19, 0.97) both;
	--webkit-animation: popping 0.5s cubic-bezier(0.36, 0.07, 0.19, 0.97) both;
}

@keyframes popping {
	0% {
		transform: scale(0);
		--webkit-transform: scale(0);
		opacity: 0;
	}

	70% {
		transform: scale(1.1);
		--webkit-transform: scale(1.1);
		opacity: 1;
	}

	100% {
		transform: scale(1);
		--webkit-transform: scale(1);
		opacity: 1;
	}
}

@media only screen and (max-width: 768px) {
	.flex {
		flex-direction: column;
	}
}